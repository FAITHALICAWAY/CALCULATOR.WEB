<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Display Calculator</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: linear-gradient(to right, #f6f3fa, #e377bd,#f6f3fa);
        }
        .calculator {
            background: #ffffff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            text-align: center;
            width: 320px;
        }
        .calculator input {
            width: calc(100% - 20px);
            padding: 10px;
            margin-bottom: 15px;
            font-size: 18px;
            border: 2px solid #ddd;
            border-radius: 5px;
            outline: none;
        }
        .calculator input:focus {
            border-color: #dcd8e0;
            box-shadow: 0 0 5px rgba(106, 17, 203, 0.5);
        }
        .buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }
        .buttons button {
            padding: 15px;
            font-size: 18px;
            border: none;
            border-radius: 5px;
            background: hsl(308, 93%, 44%);
            color: #ffffff;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        .buttons button:hover {
            background: #f3f2f4;
        }
        .buttons .wide {
            grid-column: span 2;
        }
        #display {
            height: 50px;
            background: #f7f7f7;
            font-size: 24px;
            line-height: 50px;
            color: #333333;
            border-radius: 5px;
            margin-bottom: 15px;
            border: 2px solid #ddd;
            text-align: right;
            padding-right: 10px;
        }
    </style>
</head>
<body>
    <div class="calculator">
        <div id="display">0</div>
        <div class="buttons">
            <button onclick="appendNumber('7')">7</button>
            <button onclick="appendNumber('8')">8</button>
            <button onclick="appendNumber('9')">9</button>
            <button onclick="setOperation('divide')">÷</button>
            <button onclick="appendNumber('4')">4</button>
            <button onclick="appendNumber('5')">5</button>
            <button onclick="appendNumber('6')">6</button>
            <button onclick="setOperation('multiply')">×</button>
            <button onclick="appendNumber('1')">1</button>
            <button onclick="appendNumber('2')">2</button>
            <button onclick="appendNumber('3')">3</button>
            <button onclick="setOperation('subtract')">−</button>
            <button onclick="appendNumber('0')">0</button>
            <button onclick="clearDisplay()" class="wide">C</button>
            <button onclick="setOperation('add')">+</button>
            <button onclick="calculateResult()">=</button>
        </div>
    </div>

    <script>
        let currentInput = "";
        let previousInput = "";
        let operation = null;

        const display = document.getElementById("display");

        function appendNumber(number) {
            if (currentInput.length >= 12) return; // Limit input length
            currentInput += number;
            updateDisplay();
        }

        function setOperation(op) {
            if (currentInput === "") return;
            if (previousInput !== "") calculateResult();
            operation = op;
            previousInput = currentInput;
            currentInput = "";
            updateDisplay();
        }

        function calculateResult() {
            let computation;
            const prev = parseFloat(previousInput);
            const current = parseFloat(currentInput);

            if (isNaN(prev) || isNaN(current)) {
                display.innerText = "Invalid Input";
                return;
            }

            switch (operation) {
                case "add":
                    computation = prev + current;
                    break;
                case "subtract":
                    computation = prev - current;
                    break;
                case "multiply":
                    computation = prev * current;
                    break;
                case "divide":
                    computation = current !== 0 ? prev / current : "Error (÷0)";
                    break;
                default:
                    return;
            }

            currentInput = computation.toString().slice(0, 12); // Limit result length
            previousInput = "";
            operation = null;
            updateDisplay();
        }

        function clearDisplay() {
            currentInput = "";
            previousInput = "";
            operation = null;
            updateDisplay();
        }

        function updateDisplay() {
            display.innerText = previousInput 
                ? `${previousInput} ${getOperationSymbol()} ${currentInput}` 
                : currentInput || "0";
        }

        function getOperationSymbol() {
            switch (operation) {
                case "add": return "+";
                case "subtract": return "−";
                case "multiply": return "×";
                case "divide": return "÷";
                default: return "";
            }
        }
    </script>
</body>
</html>
